//
//  RLFriendInfoVC.m
//  manpower
//
//  Created by Brian on 14-6-16.
//  Copyright (c) 2014年 WHZM. All rights reserved.
//

#import "RLFriendInfoVC.h"

@interface RLFriendInfoVC ()

@end

@implementation RLFriendInfoVC

- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        // Custom initialization
        self.xmpp = [XMPPManager sharedInstance];
    }
    return self;
}

- (void)viewDidLoad
{
    [super viewDidLoad];
    [self makeNaviLeftButtonVisible:YES];

    [self setTitleText:@"个人资料"];
  
    self.nickNameCell = [[RLInfoCell alloc] initWithFrame:CGRectMake(0, 180, self.view.frame.size.width, 50)];
    [self.nickNameCell updateBackImge:0];
    self.nickNameCell.titleLabel.text = @"昵称";
    [self.view addSubview:self.nickNameCell];
    
    
    self.groupCell = [[RLInfoCell alloc] initWithFrame:CGRectMake(0, self.nickNameCell.frame.origin.y + 50, self.view.frame.size.width, 50)];
    [self.groupCell updateBackImge:0];
    self.groupCell.titleLabel.text = @"分组";
    [self.view addSubview:self.groupCell];
    
    /*互为好友才能操作*/
    if ([self checkFriends:[self.friendJID bare]])
    {
        [self.nickNameCell addTarget:self action:@selector(updateNickNameClick) forControlEvents:UIControlEventTouchDown];
        [self.groupCell addTarget:self action:@selector(changeGroup) forControlEvents:UIControlEventTouchDown];
    }
    
    self.remarkCell = [[RLInfoCell alloc] initWithFrame:CGRectMake(0, self.groupCell.frame.origin.y + 50, self.view.frame.size.width, 50)];
    [self.remarkCell updateBackImge:0];
    self.remarkCell.titleLabel.text = @"备注";
    [self.view addSubview:self.remarkCell];
   
    [self getViewData];
    
    self.headerView=[[GroupInfoHeadView alloc]initWithFrame:CGRectMake(0, 0, self.view.frame.size.width, 180)];
    [self.headerView loadViewWithName:[self.friendJID user] Subject:self.friendInfo.nickname];
    
    NSData *photoData = [[[XMPPManager sharedInstance] xmppvCardAvatarModule] photoDataForJID:self.friendJID];
    if (photoData != nil)
        [self.headerView.picImgView setImage:[UIImage imageWithData:photoData]];
    else
        [self.headerView.picImgView setImage:[UIImage imageNamed:@"defaultPerson"]];
    [self.view addSubview:self.headerView];
    
    [self changeButtonFunction];
}

-(void)changeButtonFunction
{
    if ([self checkFriends:[self.friendJID bare]]) {
        self.sendButton = [[UIButton alloc] init];
        [self.sendButton setBackgroundImage:[UIImage imageNamed:@"btn-seed-message"] forState:UIControlStateNormal];
        [self.sendButton setBackgroundImage:[UIImage imageNamed:@"btn-seed-message-sel"] forState:UIControlStateHighlighted];
        self.sendButton.frame = CGRectMake(9, self.remarkCell.frame.origin.y + 76, 147, 44);
        [self.sendButton addTarget:self action:@selector(sendMessageToRoom:) forControlEvents:UIControlEventTouchUpInside];
        [self.view addSubview:self.sendButton];
        
        self.deleteButton = [UIButton buttonWithType:UIButtonTypeCustom];
        [self.deleteButton setBackgroundImage:[UIImage imageNamed:@"btn-move-friend"] forState:UIControlStateNormal];
        [self.deleteButton setBackgroundImage:[UIImage imageNamed:@"btn-move-friend-sel"] forState:UIControlStateHighlighted];
        self.deleteButton.frame = CGRectMake(164, self.remarkCell.frame.origin.y + 76, 147, 44);
        [self.deleteButton addTarget:self action:@selector(deleteFriend:) forControlEvents:UIControlEventTouchUpInside];
        [self.view addSubview:self.deleteButton];
    }else
    {
        self.addButton = [UIButton buttonWithType:UIButtonTypeCustom];
        [self.addButton setBackgroundImage:[UIImage imageNamed:@"btn-add-friend"] forState:UIControlStateNormal];
        [self.addButton setBackgroundImage:[UIImage imageNamed:@"btn-add-friend-sel"] forState:UIControlStateHighlighted];
        self.addButton.frame = CGRectMake(9, self.remarkCell.frame.origin.y + 76, 147, 44);
        [self.addButton addTarget:self action:@selector(addFriend:) forControlEvents:UIControlEventTouchUpInside];
        [self.view addSubview:self.addButton];

    }
    
}

-(void)addFriend:(UIButton *)sender
{
    [self.xmpp AddFriend:self.friendJID.user];
    IMAlert *alert = [[IMAlert alloc] init];
    [alert alert:@"申请已发送" delegate:self];
}

-(BOOL)checkFriends:(NSString *)strJID;
{
    XMPPJID *jid = [XMPPJID jidWithString:strJID];
    return [self.xmpp.xmppRoster.xmppRosterStorage userExistsWithJID:jid xmppStream:self.xmpp.xmppStream];
}

- (void)didReceiveMemoryWarning
{
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

-(void)getViewData
{
    /*获取个人信息*/
    self.friendInfo = [self.xmpp.xmppRosterStorage userForJID:self.friendJID
                                                   xmppStream:self.xmpp.xmppStream
                                         managedObjectContext:[self.xmpp managedObjectContext_roster]];
    if ([[self.friendInfo.groups allObjects] count] != 0) {
        XMPPGroupCoreDataStorageObject * group=[self.friendInfo.groups.allObjects objectAtIndex:0];
        self.sectionName = group.name;
    }else
    {
        if ([self checkFriends:[self.friendJID bare]]) {
            self.sectionName = @"我的好友";
        }
    }
    self.headerView.subjectLab.text = self.friendInfo.displayName;
    self.nickNameCell.infoLabel.text = self.friendInfo.nickname;
    self.groupCell.infoLabel.text = self.sectionName;
    self.remarkCell.infoLabel.text = self.friendInfo.displayName;
}

/*
#pragma mark - Navigation

// In a storyboard-based application, you will often want to do a little preparation before navigation
- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender
{
    // Get the new view controller using [segue destinationViewController].
    // Pass the selected object to the new view controller.
}
*/
-(void)changeGroup
{
    RLSectionGroupVC *rlSectionGroupVC = [[RLSectionGroupVC alloc] init];
    rlSectionGroupVC.friendJID = self.friendJID;
    rlSectionGroupVC.sectionName = self.sectionName;
    [self.navigationController pushViewController:rlSectionGroupVC animated:YES];
}

- (void)updateNickNameClick{
    UIAlertView * alert=[[UIAlertView alloc]initWithTitle:@"修改昵称" message:nil delegate:self cancelButtonTitle:@"取消" otherButtonTitles:@"确定", nil];
    alert.alertViewStyle=UIAlertViewStylePlainTextInput;
    alert.delegate=self;
    alert.tag=-1;
    [alert show];
}

#pragma mark - UIAlertViewDelegate
- (void)alertView:(UIAlertView *)alertView clickedButtonAtIndex:(NSInteger)buttonIndex{
    if (alertView.tag == -1) {
        //得到输入框
        UITextField *tf=[alertView textFieldAtIndex:0];
        self.nickName = tf.text;
        if (buttonIndex == 1 && tf.text.length != 0) {
            [self.xmpp changeNickNameByJID:self.friendJID useNickName:self.nickName andGroups:self.sectionName];
            self.nickNameCell.infoLabel.text = self.nickName;
            self.headerView.subjectLab.text = self.nickName;
            self.remarkCell.infoLabel.text = self.nickName;
            
            // 更新最近联系人的昵称
            NSDictionary *dic = @{@"nickname": self.nickName,
                                  @"jid": [self.friendJID bare]};
            [[NSNotificationCenter defaultCenter] postNotificationName:NOFITICATION_CHANGE_FRIEND_NICKNAME object:nil userInfo:dic];
            return;
        }
        return;
    }

    if (buttonIndex != 0) {
        [self.xmpp removeFriend:self.friendInfo.jid.user];
        [self.navigationController popToRootViewControllerAnimated:YES];
    }
}

-(void)sendMessageToRoom:(UIButton *)sender
{
    if (self.backFlag == -1) {
        [self.navigationController popViewControllerAnimated:YES];
    }else
    {
        RLSendMessageVC *sendMessageVC = [[RLSendMessageVC alloc] init];
        sendMessageVC.friendJID = self.friendInfo.jid;
        sendMessageVC.type = @"chat";
        sendMessageVC.isInfo = -1;
        [self.navigationController pushViewController:sendMessageVC animated:YES];
    }
    
}

-(void)deleteFriend:(UIButton *)sender
{
    IMAlert *alert = [[IMAlert alloc] init];
    [alert alertCancelOK:@"确定删除？" delegate:self];
}
@end
