//
//  RLLoginVC.m
//  manpower
//
//  Created by hanjin on 14-6-3.
//  Copyright (c) 2014年 WHZM. All rights reserved.
//

#import "RLLoginVC.h"
#import "XMPPManager.h"
#import "AppDelegate.h"
#import "RLRegisterVC.h"
#import "AppDelegate.h"
#import "RLSendMessageVC.h"
#import "RLMyInfo.h"
#import "XMPPConnnectionManager.h"

@interface RLLoginVC (){
    NSString *account;
    NSString *password;
    XMPPConnnectionManager *xmppConnection;
}
@property (weak, nonatomic) IBOutlet UITextField *accountTextField;
@property (weak, nonatomic) IBOutlet UITextField *passWordTextField;

@end

@implementation RLLoginVC

- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        xmpp = [XMPPManager sharedInstance];
        [xmpp.xmppStream addDelegate:self delegateQueue:dispatch_get_main_queue()];
        xmppConnection = [XMPPConnnectionManager sharedXMPPConnnectionManager];
    }
    return self;
}
- (void)viewWillAppear:(BOOL)animated {
    [super viewWillAppear:animated];
    self.navigationController.navigationBarHidden = YES;
}

-(void)viewDidAppear:(BOOL)animated{
    [super viewDidAppear:animated];
    [[NSNotificationCenter defaultCenter] addObserver:self
                                             selector:@selector(keyboardWillShow:)
                                                 name:UIKeyboardWillShowNotification
                                               object:nil];
    
    [[NSNotificationCenter defaultCenter] addObserver:self
                                             selector:@selector(keyboardWillHide:)
                                                 name:UIKeyboardWillHideNotification
                                               object:nil];
}

-(void)viewWillDisappear:(BOOL)animated{
    [[NSNotificationCenter defaultCenter] removeObserver:self];
}

-(UIStatusBarStyle)preferredStatusBarStyle
{
    return UIStatusBarStyleDefault;
}
- (BOOL)prefersStatusBarHidden
{
    return NO;
}

- (void)viewDidLoad
{
    [super viewDidLoad];
    if (iOS7) {
        [self setNeedsStatusBarAppearanceUpdate];
        self.edgesForExtendedLayout = UIRectEdgeNone;

    }
    
//    self.accountTextField.clearButtonMode = UITextFieldViewModeWhileEditing;
    self.passWordTextField.clearButtonMode = UITextFieldViewModeWhileEditing;

    self.navigationController.navigationBarHidden = YES;
    self.accountTextField.text = xmppConnection.username;
    self.passWordTextField.text = xmppConnection.password;
    self.accountTextField.autocorrectionType = UITextAutocorrectionTypeNo;
    if (self.accountTextField.text.length && self.passWordTextField.text.length) {
//        [self loginButtonClicked:self.loginButton];
    }
}

#pragma mark - IBActions
- (IBAction)loginButtonClicked:(id)sender {

    account = [self.accountTextField.text stringByTrimmingCharactersInSet:[NSCharacterSet whitespaceCharacterSet]];
    password = [self.passWordTextField.text stringByTrimmingCharactersInSet:[NSCharacterSet whitespaceCharacterSet]];
    if (account.length == 0 || password.length == 0)
    {
        [self showStringHUD:@"用户名 / 密码不能为空" second:1.5];
        return;
    }

    NSString *myJID = [xmpp getFullJID:account];
    [xmpp.xmppStream setMyJID:[XMPPJID jidWithString:myJID]];
    
    //连接服务器
    xmppConnection.loginFlag = YES;
    xmppConnection.username = account;
    xmppConnection.password = password;
    [xmppConnection login];
    
}

-(IBAction)registerButtonClicked:(id)sender{
    RLRegisterVC* regVC = [[RLRegisterVC alloc] initWithNibName:@"RLRegisterVC" bundle:nil];
    UIButton *button = (UIButton*)sender;
    // 点击的是忘记密码
    if (button.tag == 100) {
        regVC.type = 1;
    }

    [self.navigationController pushViewController:regVC animated:YES];
}

-(IBAction)viewTapped:(id)sender{
    [self.accountTextField resignFirstResponder];
    [self.passWordTextField resignFirstResponder];
}

#pragma mark Private
- (void)didReceiveMemoryWarning
{
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

-(void)keyboardWillShow:(NSNotification*)notif
{
    float moveY = 60.0f;
    CGRect rect = [[notif.userInfo objectForKey:UIKeyboardFrameEndUserInfoKey] CGRectValue];
    CGFloat y = rect.origin.y;
    [UIView beginAnimations:nil context:nil];
    [UIView setAnimationDuration:0.25];
    if (iOS7) {
        moveY = 90.0f;
    }
    self.view.center = CGPointMake(CGRectGetWidth(self.view.frame)/2.0, y/2.0 + moveY);
    [UIView commitAnimations];
}

-(void)keyboardWillHide:(NSNotification*)notif
{
    float moveY = 10.0f;
    CGRect rect = [[notif.userInfo objectForKey:UIKeyboardFrameEndUserInfoKey] CGRectValue];
    CGFloat y = rect.origin.y;
    [UIView beginAnimations:nil context:nil];
    [UIView setAnimationDuration:0.25];
    if (iOS7) {
        moveY = 0.0f;
    }
    self.view.center = CGPointMake(CGRectGetWidth(self.view.frame)/2.0, y/2.0 - moveY);
    [UIView commitAnimations];
}
@end
