//
//  RLGroupMemberInfoVC.m
//  manpower
//
//  Created by hanjin on 14-6-11.
//  Copyright (c) 2014年 WHZM. All rights reserved.
//

#import "RLGroupMemberInfoVC.h"

@interface RLGroupMemberInfoVC ()<UITableViewDelegate,UITableViewDataSource>
{
    UILabel *signatureLabel;
}

@end
static NSString *friendInfoCell = @"friendInfoCell";
@implementation RLGroupMemberInfoVC

- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        // Custom initialization
        [self makeNaviLeftButtonVisible:YES];
        self.xmpp = [XMPPManager sharedInstance];
    }
    return self;
}

- (void)viewDidLoad
{
    [super viewDidLoad];
    // Do any additional setup after loading the view from its nib.
    [self setTitleText:@"群成员资料"];
   
//    GroupInfoHeadView * headerView=[[GroupInfoHeadView alloc]initWithFrame:CGRectMake(0, 0, self.view.frame.size.width, 180)];
//    [headerView loadViewWithName:self.memberVO.nickName Subject:self.memberVO.jid];
//    
//    
//    NSData *photoData = [[[XMPPManager sharedInstance] xmppvCardAvatarModule] photoDataForJID:[XMPPJID jidWithString:self.memberVO.jid]];
//    if (photoData != nil)
//        [headerView.picImgView setImage:[UIImage imageWithData:photoData]];
//    else
//        [headerView.picImgView setImage:[UIImage imageNamed:@"defaultPerson"]];
//    [self.view addSubview:headerView];
//    
//    self.groupNickNameCell = [[RLInfoCell alloc] initWithFrame:CGRectMake(0, 180, self.view.frame.size.width, 50)];
//    [self.groupNickNameCell updateBackImge:0];
//    self.groupNickNameCell.titleLabel.text = @"群昵称";
//    self.groupNickNameCell.infoLabel.text = self.memberVO.jid;
//    [self.view addSubview:self.groupNickNameCell];
//    
//    self.groupRoleCell = [[RLInfoCell alloc] initWithFrame:CGRectMake(0, self.groupNickNameCell.frame.origin.y + 50, self.view.frame.size.width, 50)];
//    [self.groupRoleCell updateBackImge:0];
//    self.groupRoleCell.titleLabel.text = @"群权限";
//    if ([self.memberVO.affiliation isEqualToString:@"20"]) {
//        self.groupRoleCell.infoLabel.text = @"管理员";
//    }else if([self.memberVO.affiliation isEqualToString:@"10"])
//    {
//        self.groupRoleCell.infoLabel.text = @"拥有者";
//    }else
//    {
//        self.groupRoleCell.infoLabel.text = @"成员";
//    }
//    [self.view addSubview:self.groupRoleCell];
   
    self.logic=[RLGroupLogic sharedRLGroupLogic];
    
    [self setupHeaderView];
    [self changeButtonFunction:self.memberVO.affiliation];
}

- (void)didReceiveMemoryWarning
{
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

#pragma mark - Initailize views
-(void)setupHeaderView{
    self.headerView = [RLMyInfoHeaderView headerView];
    
    // 设置tableview大小
    _tableView = [[UITableView alloc] init];
    _tableView.delegate = self;
    _tableView.dataSource = self;
    [_tableView setFrame:CGRectMake(0, 0, self.view.frame.size.width, self.view.frame.size.height-64)];
    _tableView.tableHeaderView = self.headerView;
    [self.view addSubview:_tableView];
    
    [self bindValuesToView];
}

-(void)bindValuesToView{
    @weakify(self);
    RAC(self.headerView.subtitleLabel,text) = [RACSignal combineLatest:@[RACObserve(_friendInfo, age), RACObserve(_friendInfo, sex)] reduce:^(NSNumber* age, NSNumber* sex){
        NSString *gender;
        switch ([sex integerValue]) {
            case 0:
                gender = @"男";
                break;
                
            default:
                gender = @"女";
                break;
        }
        NSString *result = gender;
        if (age.integerValue) {
            result = [NSString stringWithFormat:@"%@ %@岁",gender,age];
        }
        return result;
    }];
    
    [RACObserve(_friendInfo, name) subscribeNext:^(NSString *nameStr){
        @strongify(self);
        self.headerView.titleTextField.text = nameStr;
    }];
    
    [RACObserve(_friendInfo, photo) subscribeNext:^(NSString *urlStr){
        @strongify(self);
        NSURL *url = [NSURL URLWithString:urlStr];
        [self.headerView.photoIV sd_setImageWithURL:url placeholderImage:IMAGE_DEFAULT_PERSON];
    }];
    
    [RACObserve(_friendInfo, background) subscribeNext:^(NSString *urlStr){
        @strongify(self);
        if (urlStr.length) {
            NSURL *url = [NSURL URLWithString:urlStr];
            [self.headerView.backgroundIV sd_setImageWithURL:url placeholderImage:IMAGE_DEFAULT_BACKGROUND];
        }
    }];
}

-(BOOL)checkFriends:(NSString *)strJID;
{
    XMPPJID *jid = [XMPPJID jidWithString:strJID];
    
    BOOL isFriend=[self.xmpp.xmppRoster.xmppRosterStorage userExistsWithJID:jid xmppStream:self.xmpp.xmppStream];
    if (isFriend) {
        XMPPRosterCoreDataStorage *rosterStorage = [XMPPManager sharedInstance].xmppRosterStorage;
        XMPPStream *stream = [XMPPManager sharedInstance].xmppStream;
        XMPPUserCoreDataStorageObject* user = [rosterStorage userForJID:jid xmppStream:stream managedObjectContext:rosterStorage.mainThreadManagedObjectContext];
        if ([user.subscription isEqualToString:@"both"]) {
            isFriend=YES;
        }else{
            isFriend=NO;
        }
        
    } else {
        isFriend=NO;
    }
    return isFriend;
}

-(void)changeButtonFunction:(NSString *)affiliation
{
    UIView *footerView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, [UIScreen mainScreen].bounds.size.width, 60)];
    if ([affiliation isEqualToString:@"10"] && self.isOwner == 0) {
        DDLogInfo(@"------->");
    }else
    {
        if ([self checkFriends:self.memberVO.jid]) {
            self.sendButton = [UIButton buttonWithType:UIButtonTypeCustom];
            [self.sendButton setBackgroundImage:[UIImage imageNamed:@"btn-seed-message"] forState:UIControlStateNormal];
            [self.sendButton setBackgroundImage:[UIImage imageNamed:@"btn-seed-message-sel"] forState:UIControlStateHighlighted];
            self.sendButton.frame = CGRectMake(9, 6, 147, 44);
            [self.sendButton addTarget:self action:@selector(sendMessageToSomeOne:) forControlEvents:UIControlEventTouchUpInside];
            [footerView addSubview:self.sendButton];
        }else
        {
            self.addButton = [UIButton buttonWithType:UIButtonTypeCustom];
            [self.addButton setBackgroundImage:[UIImage imageNamed:@"btn-add-friend"] forState:UIControlStateNormal];
            [self.addButton setBackgroundImage:[UIImage imageNamed:@"btn-add-friend-sel"] forState:UIControlStateHighlighted];
            self.addButton.frame = CGRectMake(164, 6, 147, 44);
            [self.addButton addTarget:self action:@selector(addFriend:) forControlEvents:UIControlEventTouchUpInside];
            [footerView addSubview:self.addButton];
        }
    }

    
    if (self.isOwner == 0 || self.isOwner == 1) {
        if ([affiliation isEqualToString:@"10"] && self.isOwner == 0) {
            DDLogInfo(@"------->");
        }else
        {
            self.removeButton = [UIButton buttonWithType:UIButtonTypeCustom];
            [self.removeButton setBackgroundImage:[UIImage imageNamed:@"btn-move-member"] forState:UIControlStateNormal];
            [self.removeButton setBackgroundImage:[UIImage imageNamed:@"btn-move-member-sel"] forState:UIControlStateHighlighted];
            self.removeButton.frame = CGRectMake(9, 6, 147, 44);
            [self.removeButton addTarget:self action:@selector(removeSomeBodyIntoRoom:) forControlEvents:UIControlEventTouchUpInside];
            [footerView addSubview:self.removeButton];
        }
    }
    _tableView.tableFooterView = footerView;
}

#pragma Button Action
-(void)removeSomeBodyIntoRoom:(UIButton *)sender
{
    IMAlert *alert = [[IMAlert alloc] init];
    [alert alertCancelOK:@"确定移除？" delegate:self];
}

-(void)sendMessageToSomeOne:(UIButton *)sender
{
    RLSendMessageVC *sendMessageVC = [[RLSendMessageVC alloc] init];
    sendMessageVC.isInfo = -1;
    sendMessageVC.friendJID = [XMPPJID jidWithString:self.memberVO.jid];
    sendMessageVC.type = @"chat";
    [self.navigationController pushViewController:sendMessageVC animated:YES];
}

-(void)addFriend:(UIButton *)sender
{
    XMPPJID *jid = [XMPPJID jidWithString:self.memberVO.jid];
    [self.xmpp AddFriend:jid.user];
    IMAlert *alert = [[IMAlert alloc] init];
    [alert alert:@"申请已发送" delegate:self];
}

#pragma mark UITableViewDelegate && UITableViewDataSource
-(NSInteger)numberOfSectionsInTableView:(UITableView *)tableView{
    return 2;
}

-(NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section{
    NSInteger row = 0;
    if (section == 0) {
        row = 2;
    }else{
        row = 2;
    }
    return row;
}

-(CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath{
    CGFloat height = 50;
    if (indexPath.section == 0 && indexPath.row == 1){
        signatureLabel = [[UILabel alloc] initWithFrame:CGRectMake(0, 0, 200, 15)];
        signatureLabel.font = [UIFont systemFontOfSize:14];
        signatureLabel.numberOfLines = 0;
        signatureLabel.text = _friendInfo.signature;
        [signatureLabel sizeToFit];
        height = signatureLabel.frame.size.height+20;
        height = height < 50 ? 50 :height;
    }
    return height;
}

-(UIView*)tableView:(UITableView *)tableView viewForFooterInSection:(NSInteger)section{
    UIView *footerView;
    footerView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, [UIScreen mainScreen].bounds.size.width, 20)];
    footerView.backgroundColor = UIColorFromRGB(0xeeeeee);
    UIImageView *topSeperatorIV = [[UIImageView alloc] initWithFrame:CGRectMake(0, 0, [UIScreen mainScreen].bounds.size.width, 0.5)];
    topSeperatorIV.backgroundColor = UIColorFromRGB(0xcccccc);
    
    UIImageView *bottomSeperatorIV = [[UIImageView alloc] initWithFrame:CGRectMake(0, 22, [UIScreen mainScreen].bounds.size.width, 0.5)];
    bottomSeperatorIV.backgroundColor = UIColorFromRGB(0xcccccc);
    
    return footerView;
}

-(UITableViewCell*)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath{
    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:friendInfoCell];
    if (cell == nil) {
        cell = [[UITableViewCell alloc] initWithStyle:UITableViewCellStyleValue1
                                      reuseIdentifier:friendInfoCell];
        cell.textLabel.font = [UIFont systemFontOfSize:14];
        cell.detailTextLabel.textColor = [UIColor lightGrayColor];
        cell.selectionStyle = UITableViewCellSelectionStyleNone;
    }
    
    __block UITableViewCell *blockCell = cell;
    
    if (indexPath.section == 0) {
        switch (indexPath.row) {
            case 0:{
                blockCell.textLabel.text = @"ID";
                blockCell.detailTextLabel.text = @"";
                
                [RACObserve(_friendInfo, username) subscribeNext:^(NSString *username){
                    blockCell.detailTextLabel.text = username;
                }];
                break;
            }
            case 1:
            {
                blockCell.textLabel.text = @"个性签名";
                blockCell.detailTextLabel.text = @"";
                blockCell.detailTextLabel.numberOfLines = 0;
                blockCell.detailTextLabel.font = [UIFont systemFontOfSize:14];
                [RACObserve(_friendInfo, signature) subscribeNext:^(NSString *signature){
                    blockCell.detailTextLabel.text = signature;
                    [blockCell.detailTextLabel sizeToFit];
                }];
                break;
            }
            default:
                break;
        }
    }else{
        switch (indexPath.row) {
            case 0:
                blockCell.textLabel.text = @"群昵称";
                [RACObserve(_friendInfo, username) subscribeNext:^(NSString *username){
                    blockCell.detailTextLabel.text = username;
                }];
                break;
            case 1:
                blockCell.textLabel.text = @"群权限";
                if ([self.memberVO.affiliation isEqualToString:@"20"]) {
                    blockCell.detailTextLabel.text = @"管理员";
                }else if([self.memberVO.affiliation isEqualToString:@"10"]){
                    blockCell.detailTextLabel.text = @"拥有者";
                }else{
                    blockCell.detailTextLabel.text = @"成员";
                }
                break;
            default:
                break;
        }
    }
    return cell;
}


#pragma mark - UIAlertViewDelegate
- (void)alertView:(UIAlertView *)alertView clickedButtonAtIndex:(NSInteger)buttonIndex
{
    if (buttonIndex != 0) {
        [self.xmppRoom deactivate];
        [self.logic leaveGroupByUserJID:self.memberVO.jid andRoomName:self.xmppRoom.roomJID.user success:^(id json) {
            [self.navigationController popViewControllerAnimated:YES];
        } failure:^(NSError *err) {
            [self failureHideHUD];
        }];
    }
}
@end
